"""added borrow endpoint

Revision ID: 9eaa6dd1946b
Revises: cc76b81e3d3e
Create Date: 2025-04-02 16:02:52.665881

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9eaa6dd1946b'
down_revision: Union[str, None] = 'cc76b81e3d3e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     """Upgrade schema."""
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('borrows',
#     sa.Column('id', sa.UUID(), nullable=False),
#     sa.Column('user_id', sa.UUID(), sa.ForeignKey('users.id'), nullable=False),
#     sa.Column('book_id', sa.UUID(), sa.ForeignKey('books.id'), nullable=False),
#     sa.Column('return_date', sa.DateTime(), nullable=False),
#     sa.PrimaryKeyConstraint('id')
#     )
#     op.alter_column('users', 'age',
#                existing_type=sa.VARCHAR(),
#                type_=sa.Integer(),
#                existing_nullable=False,
#                postgresql_using="age::integer")
#     # ### end Alembic commands ###

def upgrade() -> None:
    """Upgrade schema."""
    # ### Fix 1: Convert non-integer values in 'age' column before altering type ###
    op.execute("UPDATE users SET age = '0' WHERE age !~ '^[0-9]+$'")  # Ensures only numeric values exist

    # ### Fix 2: Create the 'borrows' table with proper UUID foreign keys ###
    op.create_table(
        'borrows',
        sa.Column('id', sa.UUID(as_uuid=True), nullable=False, primary_key=True),
        sa.Column('user_id', sa.UUID(as_uuid=True), sa.ForeignKey('users.id'), nullable=False),
        sa.Column('book_id', sa.UUID(as_uuid=True), sa.ForeignKey('books.id'), nullable=False),
        sa.Column('return_date', sa.DateTime(), nullable=False),
    )

    # ### Fix 3: Alter 'age' column with safe conversion ###
    op.alter_column(
        'users', 'age',
        existing_type=sa.VARCHAR(),
        type_=sa.Integer(),
        existing_nullable=False,
        postgresql_using="age::integer"  # Safe if all values are numeric after Fix 1
    )



def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'age',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               existing_server_default=sa.text("'Unknown'::character varying"))
    op.drop_table('borrows')
    # ### end Alembic commands ###
